METHOD: System.String VSharp.Test.Tests.Strings.SymbolicString(System.String)
RESULT: UNION[
	| !(0 == s) ~> (HeapRef s)
	| 0 == s ~> <ERROR: (HeapRef 2)>]
HEAP:
{ heap = merge[
	(!(0 == s), h0),
	(0 == s, { heap = h1, statics = s2 } ⚪ recapp(.ctor))], statics = merge[
	(!(0 == s), s3),
	(0 == s, { heap = h1, statics = s2 } ⚪ recapp(.ctor))] } where
---------- h0 = ----------
1 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: '\000';
		 ... 1 ... |]
	| System.String.m_StringLength ~> 0]
---------- h1 = ----------
1 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: '\000';
		 ... 1 ... |]
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> 0
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._message ~> null
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> null
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception.captured_traces ~> null
	| System.Exception.native_trace_ips ~> null]
---------- s2 = ----------
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.String ==> STRUCT System.String[
	| System.String.Empty ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.String.Empty)]
	| System.String.PROBABILISTICMAP_BLOCK_INDEX_MASK ~> UNION[
		| !hasKey#1 ~> 7
		| hasKey#1 ~> System.String.PROBABILISTICMAP_BLOCK_INDEX_MASK]
	| System.String.PROBABILISTICMAP_BLOCK_INDEX_SHIFT ~> UNION[
		| !hasKey#1 ~> 3
		| hasKey#1 ~> System.String.PROBABILISTICMAP_BLOCK_INDEX_SHIFT]
	| System.String.PROBABILISTICMAP_SIZE ~> UNION[
		| !hasKey#1 ~> 8
		| hasKey#1 ~> System.String.PROBABILISTICMAP_SIZE]
	| System.String.StackallocIntBufferSizeLimit ~> UNION[
		| !hasKey#1 ~> 128
		| hasKey#1 ~> System.String.StackallocIntBufferSizeLimit]]
VSharp.Test.Tests.Strings ==> STRUCT VSharp.Test.Tests.Strings[]
---------- s3 = ----------
System.String ==> STRUCT System.String[
	| System.String.Empty ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.String.Empty)]
	| System.String.PROBABILISTICMAP_BLOCK_INDEX_MASK ~> UNION[
		| !hasKey#1 ~> 7
		| hasKey#1 ~> System.String.PROBABILISTICMAP_BLOCK_INDEX_MASK]
	| System.String.PROBABILISTICMAP_BLOCK_INDEX_SHIFT ~> UNION[
		| !hasKey#1 ~> 3
		| hasKey#1 ~> System.String.PROBABILISTICMAP_BLOCK_INDEX_SHIFT]
	| System.String.PROBABILISTICMAP_SIZE ~> UNION[
		| !hasKey#1 ~> 8
		| hasKey#1 ~> System.String.PROBABILISTICMAP_SIZE]
	| System.String.StackallocIntBufferSizeLimit ~> UNION[
		| !hasKey#1 ~> 128
		| hasKey#1 ~> System.String.StackallocIntBufferSizeLimit]]
VSharp.Test.Tests.Strings ==> STRUCT VSharp.Test.Tests.Strings[]
