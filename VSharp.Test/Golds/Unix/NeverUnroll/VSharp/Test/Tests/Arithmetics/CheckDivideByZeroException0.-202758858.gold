METHOD: System.Int32 VSharp.Test.Tests.Arithmetics.CheckDivideByZeroException0(System.Int32)
RESULT: <ERROR: (HeapRef 1)>
HEAP:
{ heap = { heap = h0, statics = s1 } ⚪ recapp(.ctor), statics = { heap = h0, statics = s1 } ⚪ recapp(.ctor) } where
---------- h0 = ----------
1 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> 0
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._message ~> null
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> null
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception.captured_traces ~> null
	| System.Exception.native_trace_ips ~> null]
---------- s1 = ----------
System.Byte ==> STRUCT System.Byte[
	| System.Byte.MaxValue ~> UNION[
		| !hasKey#1 ~> 255
		| hasKey#1 ~> System.Byte.MaxValue]
	| System.Byte.MinValue ~> UNION[
		| !hasKey#1 ~> 0
		| hasKey#1 ~> System.Byte.MinValue]]
System.DivideByZeroException ==> STRUCT System.DivideByZeroException[]
VSharp.Test.Tests.Arithmetics ==> STRUCT VSharp.Test.Tests.Arithmetics[]
