METHOD: System.Int32 VSharp.Test.Tests.Typecast.Typecast.DownCastObject2(System.Object, System.Object)
RESULT: UNION[
	| !(0 == obj1) & !(0 == obj2) & (TypeVariable{obj1}{System.Object} <: VSharp.Test.Tests.Typecast.Piece) & (TypeVariable{obj2}{System.Object} <: VSharp.Test.Tests.Typecast.Pawn) | !(0 == obj1) & (TypeVariable{obj1}{System.Object} <: VSharp.Test.Tests.Typecast.Pawn) & (TypeVariable{obj1}{System.Object} <: VSharp.Test.Tests.Typecast.Piece) ~> 5
	| (!(TypeVariable{obj1}{System.Object} <: VSharp.Test.Tests.Typecast.Pawn) | !(TypeVariable{obj1}{System.Object} <: VSharp.Test.Tests.Typecast.Piece) | 0 == obj1) & (!(TypeVariable{obj1}{System.Object} <: VSharp.Test.Tests.Typecast.Piece) | !(TypeVariable{obj2}{System.Object} <: VSharp.Test.Tests.Typecast.Pawn) | 0 == obj1 | 0 == obj2) ~> 6]
HEAP:
{ heap = <empty>, statics = s0, pool = <empty> } where
---------- s0 = ----------
VSharp.Test.Tests.Typecast.Typecast ==> STRUCT VSharp.Test.Tests.Typecast.Typecast[]
