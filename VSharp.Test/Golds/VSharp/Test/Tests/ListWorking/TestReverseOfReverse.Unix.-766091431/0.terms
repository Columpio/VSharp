(!(0 == l) & !(0 == l.VSharp.Test.Tests.ListNode.Next) | !(0 == l) & !(0 == l.VSharp.Test.Tests.ListNode.Next) & (!(l == l.VSharp.Test.Tests.ListNode.Next) | !(l.VSharp.Test.Tests.ListNode.Next == μ[Reverse]_1)) & (!(l == μ[Reverse]_1) | l == l.VSharp.Test.Tests.ListNode.Next)) & (!(l == l.VSharp.Test.Tests.ListNode.Next) & l == μ[Reverse]_1 | !(l == μ[Reverse]_1) | 0 == l | 0 == l.VSharp.Test.Tests.ListNode.Next | l == l.VSharp.Test.Tests.ListNode.Next & l.VSharp.Test.Tests.ListNode.Next == μ[Reverse]_1) & (!(l == μ[Reverse]_1) | (!(l == l.VSharp.Test.Tests.ListNode.Next) | !(l.VSharp.Test.Tests.ListNode.Next == μ[Reverse]_1)) & (!(l == μ[Reverse]_1) | l == l.VSharp.Test.Tests.ListNode.Next) | 0 == l | 0 == l.VSharp.Test.Tests.ListNode.Next) | (!(0 == l) & !(0 == l.VSharp.Test.Tests.ListNode.Next) | !(0 == l) & !(0 == l.VSharp.Test.Tests.ListNode.Next) & (!(l == l.VSharp.Test.Tests.ListNode.Next) | !(l.VSharp.Test.Tests.ListNode.Next == μ[Reverse]_1)) & (!(l == μ[Reverse]_1) | l == l.VSharp.Test.Tests.ListNode.Next)) & (!(l == l.VSharp.Test.Tests.ListNode.Next) & l == μ[Reverse]_1 | 0 == l | 0 == l.VSharp.Test.Tests.ListNode.Next | l == l.VSharp.Test.Tests.ListNode.Next & l.VSharp.Test.Tests.ListNode.Next == μ[Reverse]_1) & ((!(l == l.VSharp.Test.Tests.ListNode.Next) | !(l.VSharp.Test.Tests.ListNode.Next == μ[Reverse]_1)) & (!(l == μ[Reverse]_1) | l == l.VSharp.Test.Tests.ListNode.Next) | 0 == l | 0 == l.VSharp.Test.Tests.ListNode.Next)
!(0 == l)
!(0 == l)
